env:
  global:
    - secure: "hg3zpwTsdl1hawBZjLlZw5ErUMSqQA+FEvnbeAXTPW1d+5oa/Yu5z6bYl9MqnKxx0Kyux9QJdgov/nkqQLTVy88U4w9qkEtQ6auKQxYdku9OWeduFy3P5oeI6IUkhOibxkqY9EDolBRKctTKyyDwKjDanTTttGYFeQq4jz7xkb05WmZ9gB1HPO0QPYljzPJyDw26pt2b4KC6eszeyHkwwOEAPblKkdpKILMrL/AWSiA6XkE9WN6pepHEKgfVf4g9tRupYJ9Ika9NAJpH0xHRIMb5Blu+8ccgXnyFGNVxcWrsgSYrMhXXP5MREMB4GuD2FbZya4bOZJwEGE5h3Q8wbLjneVpJsMk1zTZfWpKFs9o6gvJ4nzFWm0fcpvM7FeDmAmdvUtZk032SKEtQ337heSwS3F8pRjNdo2mqHkuH8CoKIxHI7W3kkRSnVCbLZ0HnvKh6UNcGPrn1Lm+3mfXvudjHLwchMr+XOgY41OahLhtcL+hhQhxvznapJnHbwyn3IItiurK+9x5q66UZ2ZUXwN8QiNrZKWSe4Ixb1ccaC3W7uOhiX859O7JxgCuSBbhrXqpDbUpF2VVn5+m/gJl9//hqPhI/m++EoP+ZgxB5xwD3cn2VZlKRSXSoT80zYP1ZrjG2CMJT9dPTwC4mtGNvdDZ1oUL9HeeUtVvp4E4bqIs="

before_install:
  - openssl aes-256-cbc -k "$tlspwd" -md sha256 -in ./.ci/client-combined.pem.enc -out ./.ci/client-combined.pem -d
  - git clone https://github.com/YubicoLabs/python-pkcs11tester.git /tmp/python-pkcs11tester
  - git clone https://github.com/YubicoLabs/pkcs11test.git /tmp/pkcs11test

language: c

addons:
  apt:
    packages:
    - cmake
    - gengetopt
    - help2man
    - lcov
    - libcurl4-gnutls-dev
    - libedit-dev
      libengine-pkcs11-openssl
    - libpcsclite-dev
    - libssl-dev
    - libusb-1.0-0-dev
    - opensc
    - python3-pip
    - python3-setuptools
    - pkg-config
    - swig
  homebrew:
    packages:
    - cmake
    - gengetopt
    - help2man
    - libedit
    - libusb
    - openssl@1.1
    - pcsc-lite
    - pkg-config
    - swig
    - truncate
    update: true

matrix:
  include:
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - CMAKE_EXTRA="-DENABLE_COVERAGE=1"
        - LIBEXT="so"
        - CRYPTOGRAPHY_ALLOW_OPENSSL_102="1"
      after_success:
        - gem install coveralls-lcov
        - cmake --build build --target lcov
        - coveralls-lcov build/lcov/data/capture/all_targets.info
    - os: linux
      dist: xenial
      compiler: clang
      env:
        - LIBEXT="so"
        - CRYPTOGRAPHY_ALLOW_OPENSSL_102="1"
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - LIBEXT="so"
    - os: linux
      dist: bionic
      compiler: clang
      env:
        - LIBEXT="so"
    - os: linux
      dist: focal
      compiler: gcc
      env:
        - LIBEXT="so"
    - os: linux
      dist: focal
      compiler: clang
      env:
        - LIBEXT="so"
    - os: osx
      compiler: clang
      env:
        - LIBEXT="dylib"

script:
  - pushd /tmp/pkcs11test
  - make
  - export PKCS11TEST_PATH="/tmp/pkcs11test"
  - popd
  - export krnl="$(uname -s | tr '[:upper:]' '[:lower:]')"
  - wget -q https://github.com/square/ghostunnel/releases/download/v1.3.1/ghostunnel-v1.3.1-$krnl-amd64-with-pkcs11 -O ghostunnel
  - chmod +x ./ghostunnel
  - ./ghostunnel client --listen localhost:12345 --target hsm-connector01.sthlm.in.yubico.org:8443 --keystore ./.ci/client-combined.pem --cacert ./.ci/server-crt.pem 2>/dev/null &
  - sleep 3
  - export DEFAULT_CONNECTOR_URL=$(curl http://localhost:12345/dispatcher/request)
  - echo $DEFAULT_CONNECTOR_URL
  - test -n "$DEFAULT_CONNECTOR_URL" || (echo "Unable to obtain a connector URL, aborting"; exit 1)
  - cmake -Bbuild -H. -DENABLE_EXPERIMENTAL_YKYH=1 -DDEFAULT_CONNECTOR_URL="$DEFAULT_CONNECTOR_URL" $CMAKE_EXTRA
  - cmake --build build -- --jobs=2 VERBOSE=1
  - test -e ./build/src/yubihsm-shell
  - test -e ./build/lib/libyubihsm.$LIBEXT
  - test -e ./build/pkcs11/yubihsm_pkcs11.$LIBEXT
  - test -e ./build/yhwrap/yubihsm-wrap
  - pushd build
  - ./src/yubihsm-shell --connector "$DEFAULT_CONNECTOR_URL" -p password -a reset
  - sleep 3
  - ctest --output-on-failure
  - export YUBIHSM_PKCS11_MODULE="$PWD/pkcs11/yubihsm_pkcs11.$LIBEXT"
  - popd
  - pushd /tmp/python-pkcs11tester
  - echo "connector=$DEFAULT_CONNECTOR_URL" >yubihsm_pkcs11.conf
  - export PATH="$(brew --prefix python3)/bin:$PATH"
  - pip3 install --user pykcs11==1.5.2
  - python3 setup.py test
  - popd

after_script:
  curl "http://localhost:12345/dispatcher/release?connector=$DEFAULT_CONNECTOR_URL"
