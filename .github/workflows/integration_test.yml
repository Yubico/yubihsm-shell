name: Run Integration Tests

#on:
#  schedule:
#    # Run this every wednesday at 3:40. https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
#    - cron: '40 3 * * 3'
on: [push]

jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: "ubuntu:24.04"
          - environment: "fedora:42"

    name: integeration test
    runs-on: ubuntu-latest
    container: ${{ matrix.environment }}

    steps:
      - name: clone the Yubico/yubihsm-shell repository
        uses: actions/checkout@v4
        with:
          path: yubihsm-shell

      - name: Make Debian based build
        env:
          DEBIAN_FRONTEND: noninteractive
        working-directory: yubihsm-shell
        if: ${{ matrix.environment == 'ubuntu:24.04' }}
        run: |
          apt update
          apt install -q -y build-essential  \
                       cmake pkg-config      \
                       gengetopt             \
                       help2man              \
                       libcurl4-openssl-dev  \
                       libedit-dev           \
                       libpcsclite-dev       \
                       libusb-1.0-0-dev      \
                       libssl-dev            \
                       openjdk-11-jdk-headless \
                       opensc                \
                       file                  \
                       curl                  \
                       jq                    \
                       zlib1g-dev
          
          # ubuntu 24.10 comes with _FORTIFY_SOURCE already set
          sed -i 's/add_definitions (-D_FORTIFY_SOURCE=2)/add_definitions (-D_FORTIFY_SOURCE=3)/' cmake/SecurityFlags.cmake
          
          mkdir build
          cd build
          cmake -DRELEASE_BUILD=1 -DWITHOUT_YKYH=1 ..
          cmake --build .

      - name: Make Redhat based build
        working-directory: yubihsm-shell
        if: ${{ matrix.environment == 'fedora:42' }}
        run: |
          yum -y update
          dnf -y install binutils         \
                  gcc              \
                  gcc-c++          \
                  chrpath          \
                  cmake            \
                  gengetopt        \
                  openssl-devel    \
                  libedit-devel    \
                  libcurl-devel    \
                  rpmdevtools      \
                  pcsc-lite-devel  \
                  libusb1-devel    \
                  help2man         \
                  zlib-devel       \
                  java-21-openjdk             \
                  opensc           \
                  jq \
                  openssl \
                   crypto-policies-scripts
          
          java -version
          
          # Set PCSC flags
          sed -i 's/#SET(CMAKE_C_FLAGS/SET(CMAKE_C_FLAGS/' ykhsmauth/CMakeLists.txt
          # Remove SHA-1 tests from the test suite
          sed -i 's/openssl dgst -sha1 -verify/#openssl dgst -sha1 -verify/' src/tests/tests.sh
          
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .

      - name: prepare ghostunnel
        env:
          TLSPWD: ${{ secrets.TLSKEY }}
          # GODEBUG required for ghostunnel to temporarily enable Common Name matching
          GODEBUG: x509ignoreCN=0
        run: |
          curl -o /tmp/ghostunnel -L https://github.com/ghostunnel/ghostunnel/releases/download/v1.6.0/ghostunnel-v1.6.0-linux-amd64
          chmod +x /tmp/ghostunnel
          openssl aes-256-cbc \
            -k "$TLSPWD" \
            -md sha256 \
            -in yubihsm-shell/.ci/client-combined.pem.enc \
            -out yubihsm-shell/.ci/client-combined.pem \
            -d
          /tmp/ghostunnel client \
            --listen localhost:12345 \
            --target hsm-connector01.sthlm.in.yubico.org:8443 \
            --keystore yubihsm-shell/.ci/client-combined.pem \
            --cacert yubihsm-shell/.ci/server-crt.pem > /dev/null 2>&1 &
          sleep 3
          DEFAULT_CONNECTOR_URL=$(curl -s http://localhost:12345/dispatcher/request)
          test -n "$DEFAULT_CONNECTOR_URL" || (echo "Unable to obtain a connector URL, aborting"; exit 1)
          echo "DEFAULT_CONNECTOR_URL=$DEFAULT_CONNECTOR_URL" >> $GITHUB_ENV

      - name: reset the hsm
        working-directory: yubihsm-shell/build/src
        run: |
          ./yubihsm-shell --connector "$DEFAULT_CONNECTOR_URL" -p password -a reset
          sleep 3


      - name: run yubihsm-shell tests
        working-directory: yubihsm-shell/resources/tests/bash
        env:
          DOCKER_IMAGE: ${{ matrix.environment }}
        run: |
          if [ "$DOCKER_IMAGE" = "fedora:42" ]; then
            update-crypto-policies --show
            update-crypto-policies --set LEGACY
          fi
          ./cmdline_test.sh $GITHUB_WORKSPACE/yubihsm-shell/build/src/yubihsm-shell $DEFAULT_CONNECTOR_URL

      - name: run pkcs11-tool tests
        working-directory: yubihsm-shell/resources/tests/bash
        run: |
          echo "connector=$DEFAULT_CONNECTOR_URL" > yubihsm_pkcs11.conf
          export YUBIHSM_PKCS11_CONF=`pwd`/yubihsm_pkcs11.conf
          ./opensc_test.sh $GITHUB_WORKSPACE/yubihsm-shell/build/pkcs11/yubihsm_pkcs11.so

      - name: clone the YubicoLabs/yubihsm_sunpkcs11_tests repository
        uses: actions/checkout@v4
        with:
          repository: YubicoLabs/yubihsm_sunpkcs11_tests
          path: yubihsm_sunpkcs11_tests

      - name: run sun pkcs11 tests
        #env:
          #DOCKER_IMAGE: ${{ matrix.environment }}
        if: ${{ matrix.environment == 'ubuntu:24.04' }}
        run: |
          #if [ "$DOCKER_IMAGE" = "fedora:42" ]; then
            #export JAVA_HOME="/__t/CodeQL/2.21.3/x64/codeql/tools/linux64/java"
          #fi
          # Set the YUBIHSM_PKCS11_MODULE environment variable to the path of the yubihsm_pkcs11.so file
          export YUBIHSM_PKCS11_MODULE="$GITHUB_WORKSPACE/yubihsm-shell/build/pkcs11/yubihsm_pkcs11.so"
          cd yubihsm_sunpkcs11_tests
          echo "connector=$DEFAULT_CONNECTOR_URL" > yubihsm_pkcs11.conf
          export YUBIHSM_PKCS11_CONF=`pwd`/yubihsm_pkcs11.conf
          cd src/main/resources
          ./test_setup.sh $GITHUB_WORKSPACE/yubihsm-shell/build/src/yubihsm-shell $DEFAULT_CONNECTOR_URL
          cd -
          ./gradlew build
          ./gradlew runMain -Pargs=$YUBIHSM_PKCS11_MODULE

      - name: cleanup
        if: ${{ always() }}
        run: |
          if [ -n "$DEFAULT_CONNECTOR_URL" ]; then
            curl -s http://localhost:12345/dispatcher/release?connector=$DEFAULT_CONNECTOR_URL
          fi
